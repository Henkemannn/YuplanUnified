name: e2e

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  e2e:
    runs-on: ubuntu-latest
    env:
      E2E_BASE_URL: http://127.0.0.1:5000
      # Use repo secrets if present, else fallback to known test defaults
      SUPERUSER_EMAIL: ${{ secrets.SUPERUSER_EMAIL || 'admin@example.com' }}
      SUPERUSER_PASSWORD: ${{ secrets.SUPERUSER_PASSWORD || 'Passw0rd!' }}
      DEV_CREATE_ALL: "1"          # auto-create schema in CI for demo login
      FLASK_ENV: development        # allow DEBUG-like behavior
    steps:
      - uses: actions/checkout@v4

      # Python backend
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
      - name: Start Flask app
        run: |
          nohup python run.py &> /tmp/app.log &

      # Node + Playwright
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install Playwright deps
        run: |
          cd e2e
          npm ci
          npx playwright install --with-deps
      - name: Wait for server
        run: |
          for i in {1..60}; do
            curl -sSf $E2E_BASE_URL/ui/login && exit 0
            sleep 1
          done
          echo "Server not responding" && exit 1
      - name: Seed/Ensure superuser exists
        env:
          SUPERUSER_EMAIL: ${{ env.SUPERUSER_EMAIL }}
          SUPERUSER_PASSWORD: ${{ env.SUPERUSER_PASSWORD }}
        run: |
          # The app does this on startup if env vars are set, but re-run explicitly to be safe
          python - << 'PY'
          import os
          os.environ.setdefault('DEV_CREATE_ALL','1')
          from core.auth import ensure_bootstrap_superuser
          ensure_bootstrap_superuser()
          print('Bootstrap superuser invoked')
          PY
      - name: Run e2e tests
        run: |
          cd e2e
          npm test -- --reporter=list,html
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: e2e/playwright-report
      - name: App logs
        if: always()
        run: |
          echo "--- app.log ---"
          tail -n +200 /tmp/app.log || true
